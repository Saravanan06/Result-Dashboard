package com.module;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.draw.VerticalPositionMark;
import com.itextpdf.text.pdf.*;

/**
 * Servlet implementation class pdfDatabaseGenerator
 */
@WebServlet("/pdfMarklistGenerator")
public class pdfMarklistGenerator extends HttpServlet {
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Document document = new Document();
        String FILE_NAME = "D:\\Java Pdfs\\marklist";
		String base=new String(FILE_NAME);
		String name=new String(FILE_NAME);
		int n=1;
		while (new File(name+".pdf").exists())
		    name=base+"("+ n++ + ")";
		FILE_NAME=name+".pdf";
		
		admin ad=(admin) request.getSession().getAttribute("admin");
        	try {
			Class.forName("com.mysql.cj.jdbc.Driver");
    		String url="jdbc:mysql://localhost:3306/school";
    		String uname="root";
    		String password="aladipillaiyar";
    		Connection con=DriverManager.getConnection(url,uname,password);
    		Statement st= con.createStatement();
    		String query="select * from marklist inner join student where student.rollno=marklist.rollno";
    		ResultSet rs=st.executeQuery(query);
    		PdfWriter.getInstance(document, new FileOutputStream(new File(FILE_NAME)));
            document.open();
            //Logo
            Image img=Image.getInstance("C:\\Users\\Selvam\\eclipse-workspace\\Java EE Workspace\\ResultDashboard\\src\\main\\webapp\\images\\tamilnadulogo.png");
            img.setAlignment(Image.MIDDLE);
            img.scaleToFit(75, 75);
            document.add(img);
    		//Header
            Font head=new Font();
            head.setStyle(Font.BOLD);
            head.setSize(20);
            Paragraph p = new Paragraph("Tamilnadu School Education Department",head);
            p.setAlignment(Element.ALIGN_CENTER);
            document.add(p);
            document.add(new Paragraph(" "));
            
            head.setSize(15);
            Paragraph p2 = new Paragraph("Students Database",head);
            p2.setAlignment(Element.ALIGN_CENTER);
            document.add(p2);
            document.add(new Paragraph(" "));document.add(new Paragraph(" "));
    		
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss"); 
            LocalDateTime now = LocalDateTime.now();
            
            
            Chunk glue=new Chunk(new VerticalPositionMark());
            Paragraph p1=new Paragraph("Report generated by: "+ad.name);
            p1.add(new Chunk(glue));
            p1.add("Report generated on: "+dtf.format(now));
            document.add(p1);
            document.add(new Paragraph(" "));document.add(new Paragraph(" "));
            
            
            PdfPTable table1 = new PdfPTable(10);
            table1.setWidths(new int[]{2, 2, 2, 1, 1, 1, 1, 1, 1, 1});
            table1.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            table1.getDefaultCell().setPaddingTop(10);
            table1.getDefaultCell().setPaddingBottom(10);
            table1.getDefaultCell().setBorderWidth(1.5f);
            
            Font nameFont=new Font();
            nameFont.setStyle(Font.BOLD);
            
            PdfPCell c1 = new PdfPCell(new Phrase("Roll Number",nameFont));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            c1.setPaddingBottom(10);
            c1.setPaddingTop(10);
            c1.setBorderWidth(1.5f);
            c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
            table1.addCell(c1);
            
            c1 = new PdfPCell(new Phrase("Name",nameFont));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            c1.setPaddingBottom(10);
            c1.setPaddingTop(10);
            c1.setBorderWidth(1.5f);
            c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
            table1.addCell(c1);
            
            c1 = new PdfPCell(new Phrase("DOB",nameFont));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            c1.setPaddingBottom(10);
            c1.setPaddingTop(10);
            c1.setBorderWidth(1.5f);
            c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
            table1.addCell(c1);
            
            c1 = new PdfPCell(new Phrase("Tamil",nameFont));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            c1.setPaddingBottom(10);
            c1.setPaddingTop(10);
            c1.setBorderWidth(1.5f);
            c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
            table1.addCell(c1);
            
            Font small=new Font();
            small.setSize((float) 9.5);
            small.setStyle(Font.BOLD);
            
            c1 = new PdfPCell(new Phrase("English",small));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            c1.setPaddingBottom(10);
            c1.setPaddingTop(10);
            c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
            c1.setBorderWidth(1.5f);
            table1.addCell(c1);
            
            c1 = new PdfPCell(new Phrase("Maths",nameFont));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            c1.setPaddingBottom(10);
            c1.setPaddingTop(10);
            c1.setBorderWidth(1.5f);
            c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
            table1.addCell(c1);
            
           
            c1 = new PdfPCell(new Phrase("Science",small));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            c1.setPaddingBottom(10);
            c1.setPaddingTop(10);
            c1.setBorderWidth(1.5f);
            c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
            table1.addCell(c1);
            
            c1 = new PdfPCell(new Phrase("Social",nameFont));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            c1.setPaddingBottom(10);
            c1.setPaddingTop(10);
            c1.setBorderWidth(1.5f);
            c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
            table1.addCell(c1);
            
            c1 = new PdfPCell(new Phrase("Total",nameFont));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            c1.setPaddingBottom(10);
            c1.setPaddingTop(10);
            c1.setBorderWidth(1.5f);
            c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
            table1.addCell(c1);
            
            c1 = new PdfPCell(new Phrase("Result",nameFont));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            c1.setPaddingBottom(10);
            c1.setPaddingTop(10);
            c1.setBorderWidth(1.5f);
            c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
            table1.addCell(c1);
            
    		while(rs.next()) {
    			table1.addCell(rs.getString("student.rollno"));
    			table1.addCell(rs.getString("student.name"));
    			table1.addCell(rs.getString("student.dob"));
    			table1.addCell(""+rs.getInt("marklist.Tamil"));
    			table1.addCell(""+rs.getInt("marklist.English"));
    			table1.addCell(""+rs.getInt("marklist.Maths"));
    			table1.addCell(""+rs.getInt("marklist.Science"));
    			table1.addCell(""+rs.getInt("marklist.Social"));
    			int total=rs.getInt("marklist.Tamil")+rs.getInt("marklist.English")+rs.getInt("marklist.Maths")+rs.getInt("marklist.Science")+rs.getInt("marklist.Social");
    			String result="";
    			if(total>200)result="Pass";
    			else result="Fail";
    			table1.addCell(""+total);
    			table1.addCell(new Phrase(result,nameFont));
    		}
    		table1.setWidthPercentage(110);
    		document.add(table1);
            
    		document.close();
    
        	} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        	finally
        	{
        		response.sendRedirect("viewRecord.jsp");
        	}

}
}
